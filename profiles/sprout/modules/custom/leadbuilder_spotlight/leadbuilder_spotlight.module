<?php

/**
 * Implements hook_menu().
 */
function leadbuilder_spotlight_menu()
{
    $items = array();

    $items['admin/config/system/leadbuilder-spotlight'] = array(
        'title' => 'Spotlight Configuration',
        'description' => 'Configure access to the spotlight web service',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('leadbuilder_spotlight_admin'),
        'access callback' => '_leadbuilder_spotlight_access',
        'type' => MENU_NORMAL_ITEM,
        'file' => 'leadbuilder_spotlight.admin.inc'
    );

    $items['spotlight-ajax'] = array(
        'page callback' => '_leadbuilder_spotlight_ajax',
        'access callback' => '_leadbuilder_spotlight_access',
        'type' => MENU_CALLBACK
    );

    return $items;
}

/**
 * Implements hook_page_build().
 */
function leadbuilder_spotlight_page_alter(&$page)
{

    $data = _leadbuilder_spotlight_get_cache();

    $path = drupal_get_path('module', 'leadbuilder_spotlight');

    $options = array('every_page' => TRUE);

    $access = _leadbuilder_spotlight_access();

    $credentials = array(
        'service_url' => variable_get('leadbuilder_spotlight_api_url'),
        'access_key' => variable_get('leadbuilder_spotlight_api_access_key'),
        'secret_key' => variable_get('leadbuilder_spotlight_api_secret_key'),
    );

    if (empty($credentials['service_url'])
        || empty($credentials['access_key'])
        || empty($credentials['secret_key'])
        || !_leadbuilder_spotlight_access())
    {
        return;
    }

    if($access) {
        if (empty($data['error'])) {
            $page['page_top']['spotlight'] = array(
                '#attached' => array(
                    'js'  => array(
                        $path . '/js/leadbuilder_spotlight.js' => $options
                    ),
                    'css' => array(
                        $path . '/css/leadbuilder_spotlight.css' => $options
                    )
                ),
                '#theme'    => 'leadbuilder_spotlight_bar',
                '#response' => $data,
                '#data'     => $data['data']
            );
        }
        else {
            watchdog('leadbuilder_spotlight',
                'Error getting data. Trace: <pre>@trace</pre>',
                array(
                    '@trace' => print_r($data, TRUE)
                ), WATCHDOG_ERROR);

            variable_set('leadbuilder_spotlight_last_date', 0);
        }
    }
}



/**
 * Implements hook_theme().
 */
function leadbuilder_spotlight_theme($existing, $type, $theme, $path)
{
    return array(
        'leadbuilder_spotlight_bar' => array(
            'variables' => array(
                'response' => array(),
                'data' => array(),
            ),
            'template' => 'leadbuilder_spotlight_bar',
            'path' => drupal_get_path('module', 'leadbuilder_spotlight') . '/templates',
        )
    );
}

/**
 * Implements hook_permission
 */

function leadbuilder_spotlight_permission() {
    return array(
        'administer_leadbuilder_spotlight' => array(
            'title' => t('Administer LeadBuilder Spotlight'),
            'description' => t('View and administer the spotlight bar.'),
        )
    );
}

function _leadbuilder_spotlight_access() {
    global $user;

    $logged_in = $user->uid;
    
    $administer_spotlight = user_access('administer_leadbuilder_spotlight');

    return ($logged_in && $administer_spotlight);
}

function _leadbuilder_spotlight_get_cache() {
    global $user, $language;

    $credentials = array(
        'service_url' => variable_get('leadbuilder_spotlight_api_url'),
        'access_key' => variable_get('leadbuilder_spotlight_api_access_key'),
        'secret_key' => variable_get('leadbuilder_spotlight_api_secret_key'),
    );

    if (empty($credentials['service_url'])
        || empty($credentials['access_key'])
        || empty($credentials['secret_key'])
        || !_leadbuilder_spotlight_access())
    {
        return;
    }

    $last_date = new DateTime('@' . variable_get('leadbuilder_spotlight_last_date', strtotime('1970-01-01 00:00:00')));
    $now = new DateTime();

    $diff = $now->diff($last_date);

    $data = variable_get('leadbuilder_spotlight_data');

    if(empty($data) || (($diff->y + $diff->m + $diff->d + $diff->h + $diff->i) > 15)) {
        $data = _leadbuilder_spotlight_get_data();
        if(empty($data['error'])) {
            variable_set('leadbuilder_spotlight_data', $data);
            variable_set('leadbuilder_spotlight_last_date', time());
        }
        else {
            $data = variable_get('leadbuilder_spotlight_data');
            watchdog('leadbuilder_spotlight',
                'Error getting data. Trace: <pre>@trace</pre>',
                array(
                    '@trace' => print_r($data, true)
                ), WATCHDOG_ERROR);

            variable_set('leadbuilder_spotlight_last_date', 0);
        }
    }

    return $data;
}

function _leadbuilder_spotlight_get_data(DateTime $startDate = null, DateTime $endDate = null) {

    if (empty($startDate)) {
        $startDate = new DateTime('-31 days', new DateTimeZone(drupal_get_user_timezone()));
    }

    if (empty($endDate)) {
        $endDate = new DateTime('-1 day', new DateTimeZone(drupal_get_user_timezone()));
    }


    $credentials = array(
        'service_url' => variable_get('leadbuilder_spotlight_api_url'),
        'access_key' => variable_get('leadbuilder_spotlight_api_access_key'),
        'secret_key' => variable_get('leadbuilder_spotlight_api_secret_key'),
    );

    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $credentials['service_url'] . '/analytics/data?startDate='.$startDate->format('Y-m-d').'&endDate='.$endDate->format('Y-m-d'));
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
    curl_setopt($ch, CURLOPT_MAXREDIRS, 5);
    curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 30);
    curl_setopt($ch, CURLOPT_TIMEOUT, 30);
    curl_setopt($ch, CURLOPT_USERPWD, $credentials['access_key'] . ':' . $credentials['secret_key']);

    $output = curl_exec($ch);

    $errno = curl_errno($ch);

    curl_close($ch);

    if (!$errno) {
        return json_decode($output, true);
    }

    watchdog('leadbuilder_spotlight',
        'Error getting data. Trace: <pre>@trace</pre>',
        array(
            '@trace' => print_r($output, true)
        ), WATCHDOG_ERROR);

    return variable_get('leadbuilder_spotlight_data');
}

function _leadbuilder_spotlight_ajax() {

    $data = _leadbuilder_spotlight_get_data();

    if(empty($data['error'])) {
        variable_set('leadbuilder_spotlight_data', $data);
    }
    else {
        $data = variable_get('leadbuilder_spotlight_data');
        watchdog('leadbuilder_spotlight',
            'Error getting data. Trace: <pre>@trace</pre>',
            array(
                '@trace' => print_r($data, true)
            ), WATCHDOG_ERROR);

        variable_set('leadbuilder_spotlight_last_date', 0);
    }

    echo json_encode($data);
}