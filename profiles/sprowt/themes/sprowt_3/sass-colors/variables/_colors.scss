// neutral names should come from [name that color](http://chir.ag/projects/name-that-color/)

$COLORS: (
  black: (
    base: #373d38,
    pure: #212121,
  ),
  white: (
    base: #eee,
    pure: #fff,
  ),
  neutral: (
    xanadu: #707972,
    wild-sand: #f4f4f4,
    mine-shaft: #292929,
    alabaster: #fcfcfc,
    lunar-green: #373d38,
    abbey: #d2d2d2,
    alto: #dddddd,
    mercury: #e1e1e1,
    cool-gray: #3a4648,
    emperor: #555555,
    limed-spruce: #394548,
    outer-space: #303739,
    river-bed: #4a595d,
    gray-chateau: #f0f0f0,
    char: #4a4444,
    concrete: #909090,
    crow: #131313,
    gray: #8a8787,
    iron: #d4d7d9,
    gallery: #f0f0f0,
  ),
  primary: (
    base: #d32c26,
    dark: #b1241f,
  ),
  secondary: (
    light: #373d38,
    base: #212121,
  ),
);

$color-overlay: #151616;

$color-map-bg: #f4f4f5; // unique color used so bg can be changed with color picker

@function palette($color: primary, $tone: base) {
  // Return warning if color is invalid
  @if not map-has-key($COLORS, $color) {
    @warn "There is no color '#{$color}'";
    @return null;
  }

  // Grab color tones for given color
  $color-tones: map-get($COLORS, $color);
  // Return warning if color tone is invalid
  @if not map-has-key($color-tones, $tone) {
    @warn "There is no '#{$tone}' tone of the color '#{$color}'";
    @return null;
  }

  // Return the proper shade
  @return map-get($color-tones, $tone);
}
