<?php
/**
 * @file
 * Code for the Sprowt eBooking (Features) feature.
 */

include_once 'sprowt_ebooking_features.features.inc';

function sprowt_ebooking_features_theme_registry_alter(&$theme_registry) {
    //$theme_registry['template-file']['path'] = drupal_get_path('module', 'my_feature')."/templates/";
}

function sprowt_ebooking_features_preprocess_html(&$variables) {
    if($node = menu_get_object()) {
        sprowt_require_class('nodebuilder');
        $Node = new NodeBuilder($node);
        if(!empty($node->field_ebooking) && $Node->field_ebooking->value() == 'yes') {
            $variables['classes_array'][] = 'node-ebooking';
            _sprowt_ebooking_features_add_js();
        }
    }

    $page = $variables['page'];
    foreach($page as $region) {
        if(is_array($region)) {
            foreach($region as $id => $block) {
                if(strpos($id, 'webform') !== false) {
                    $nid = str_replace('webform_client-block-', '', $id);
                    if($node = node_load($nid)) {
                        sprowt_require_class('nodebuilder');
                        $Node = new NodeBuilder($node);
                        if(!empty($node->field_ebooking) && $Node->field_ebooking->value() == 'yes') {
                            if(!in_array('has-ebooking', $variables['classes_array'])) {
                                $variables['classes_array'][] = 'has-ebooking';
                                _sprowt_ebooking_features_add_js();
                            }
                        }
                    }
                }
            }
        }
    }
}

function _sprowt_ebooking_features_add_js() {
    $path = drupal_get_path('module', 'sprowt_ebooking_features');
    drupal_add_js($path . '/js/sprowt_ebooking.js', array(
        'type' => 'file',
        'scope' => 'header',
        'weight' => 10
    ));
    drupal_add_css($path . '/css/sprowt_ebooking.css');
}

function sprowt_ebooking_features_preprocess_node(&$variables) {
    $ebooking = false;
    if($node = $variables['node']) {
        sprowt_require_class('nodebuilder');
        $Node = new NodeBuilder($node);
        if(!empty($node->field_ebooking) && $Node->field_ebooking->value() == 'yes') {
            if(!in_array('has-ebooking', $variables['classes_array'])) {
                $ebooking = true;
            }
        }
    }

    if($ebooking) {
        drupal_add_library('system', 'drupal.ajax');
    }
}

/**
 * Implements hook_form_alter().
 */
function sprowt_ebooking_features_form_alter(&$form, &$form_state, $form_id) {
    if(strpos($form_id, 'webform_client_form') !== false) {
        sprowt_require_class('nodebuilder');
        $node = $form['#node'];
        $Node = new NodeBuilder($node);
        if(!empty($node->field_ebooking) && $Node->field_ebooking->value() == 'yes') {
            //ebooking form
            $form['#attributes']['class'][] = 'sprowt-ebooking-form';
            $submit = $form['#submit'];

            $form['#submit'] = array_merge(array(
                '_sprowt_ebooking_features_form_submit'
            ), $submit);
        }
    }

    $ebooking_gtms = variable_get('sprowt_ebooking_gtm_urls', array());
    foreach ($ebooking_gtms as $nid => $values) {
        if($form_id == 'webform_client_form_' . $nid) {
            drupal_add_js(array('ebooking_gtm_urls_' . $nid => $values), 'setting');
        }
    }
}

/**
 * Submit function to fix payment processing error on ebooking multipage forms
 *
 * @param $form
 * @param $form_state
 */
function _sprowt_ebooking_features_form_submit($form, &$form_state) {
    if(empty($form_state['storage'])) {
        $form_state['storage'] = [];
    }

    $temp_storage = !empty($form_state['storage']['submitted']) ? $form_state['storage']['submitted'] : [];

    $form_state['values']['submitted'] = array_merge($temp_storage, $form_state['values']['submitted']);
    $form_state['storage']['submitted'] = $form_state['values']['submitted'];

    $submit_op = !empty($form['actions']['submit']['#value']) ? $form['actions']['submit']['#value'] : t('Submit');
    $token = _sprowt_ebooking_features_get_item($form_state['values'], 'payment');
    //Testing for payment token. If it exists then payment went through. So go ahead and submit.
    if(!empty($token) && preg_match('/tok_.*\:.*/', $token)) {
        if(!empty($form_state["#conditional_values"])) {
            $form_state['values']['submitted'] = array_merge($form_state["#conditional_values"], $form_state['values']['submitted']);
        }
        $form_state['values']['op'] = $submit_op;
    }
}

/**
 * Utility function to get a specific element in a render/form array.
 */
function _sprowt_ebooking_features_get_item($array, $key) {
    foreach ($array as $k => $value) {
        if (isset($array[$k]) && $array[$k]) {
            if ($k === $key) {
                return $array[$k];
            }
            else {
                if(is_array($array[$k])) {
                    $element = _sprowt_ebooking_features_get_item($array[$k], $key);
                    if (!empty($element)) {
                        return $element;
                    }
                }
            }
        }
    }

    return FALSE;
}

/**
 * Implements hook_menu().
 */
function sprowt_ebooking_features_menu() {
    $items = array();


    $items['node/%webform_menu/webform/ebooking'] = array(
        'title' => 'Ebooking Tag Manager',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('_sprowt_ebooking_features_gtm', 1),
        'access callback' => '_sprowt_ebooking_features_webform_access',
        'access arguments' => array(1),
        'weight' => 11,
        'type' => MENU_LOCAL_TASK,
    );

    return $items;
}

function _sprowt_ebooking_features_gtm($form, $form_state, $node) {
    $webform_state = array(
        'build_info' => array(
            'args' => array($node)
        ),
    );
    $webform = drupal_build_form('webform_client_form_' . $node->nid, $webform_state);
    $submitted = $webform['submitted'];

    $form['into'] = array(
        '#type' => 'markup',
        '#markup' => '<h2>GTM URLs</h2><p>Set the urls used in the custom virtual events for GTM for each page.</p>'
    );

    $ebooking_gtms = variable_get('sprowt_ebooking_gtm_urls', array());
    $values = !empty($ebooking_gtms[$node->nid]) ? $ebooking_gtms[$node->nid] : array();

    $pages = array();
    foreach($submitted as $key => $value) {
        if(strpos($key, '#') !== 0) {
            $pages[] = $key;
            $form[$key] = array(
                '#type' => 'textfield',
                '#title' => $key,
                '#description' => 'Use the form key to match to the fieldset',
                '#default_value' => !empty($values[$key]) ? $values[$key] : ''
            );
        }
    }

    $form['payment'] = array(
        '#type' => 'textfield',
        '#title' => 'Payment',
        '#description' => 'This gets fired when the payment modal pops up',
        '#default_value' => !empty($values['payment']) ? $values['payment'] : ''
    );

    $pages[] = 'payment';

    $form['actions'] = array(
        'submit' => array(
            '#type' => 'submit',
            '#value' => 'Submit'
        ),
    );
    $form['#node'] = $node;
    $form['#pages'] = $pages;
    $form['#submit'] = array('_sprowt_ebooking_features_gtm_submit');

    return $form;
}

function _sprowt_ebooking_features_gtm_submit($form, $form_state) {
    $node = $form['#node'];
    $pages = $form['#pages'];
    $values = array();
    foreach($pages as $key) {
        $values[$key] = $form_state['values'][$key];
    }

    $ebooking_gtms = variable_get('sprowt_ebooking_gtm_urls', array());

    $ebooking_gtms[$node->nid] = $values;

    variable_set('sprowt_ebooking_gtm_urls', $ebooking_gtms);
}

function _sprowt_ebooking_features_webform_access($node, $account = NULL) {
    global $user;
    $account = isset($account) ? $account : $user;
    $access = webform_node_update_access($node, $account);

    $ebooking = !empty($node->field_ebooking[LANGUAGE_NONE][0]['value']);

    return $access && $ebooking;
}
