<?php
$includes = glob(drupal_get_path('module', 'sprowt_theme').'/preprocess/*.inc');
foreach($includes as $include){
    include_once($include);
}


function _sprowt_theme_breadcrumb() {
  $breadcrumb = menu_get_active_breadcrumb();

  if (drupal_is_front_page()) {
    $breadcrumb = array();
  }
  else if ($node = menu_get_object()) {
  	if ($node->type == 'profile') {
  		$breadcrumb[] = l('About', 'about');
        $breadcrumb[] = l('Team', 'about/team');
  	}
    else if ($node->type == 'service') {
        $breadcrumb[] = l('Our Services', 'our-services');
        $term = taxonomy_term_load($node->field_service['und'][0]['tid']);
        $breadcrumb[] = l($term->name, arg(0, drupal_get_path_alias()));
    }
    else if ($node->type == 'localtarget') {
        $breadcrumb = array(l('Home', '')); //Reset breadcrumb due to fly-out menu
        $row = db_query("SELECT nid, title FROM node LEFT JOIN field_data_field_service ON nid=entity_id WHERE field_service_tid=:tid AND type='service'", array(':tid' => $node->field_service['und'][0]['tid']))->fetchObject();
        $breadcrumb[] = l('Services', 'our-services');
        $service = $node->field_service['und'][0]['taxonomy_term']->name;
        $breadcrumb[] = l($node->field_service['und'][0]['taxonomy_term']->name, 'our-services/'. preg_replace("/[\s_]/", "-", strtolower($service)));
        $breadcrumb[] = l($row->title, 'node/'.$row->nid);
    }
    else if ($node->type == 'blog') {
      $service = db_query("SELECT nid, title FROM node 
        LEFT JOIN field_data_field_service ON nid=entity_id 
        WHERE field_service_tid=:tid AND type='service'", array(':tid' => $node->field_service['und'][0]['tid']))->fetchObject();
      
      $market = db_query("SELECT nid, title FROM node 
        LEFT JOIN field_data_field_market ON nid=field_data_field_market.entity_id 
        LEFT JOIN field_data_field_service ON nid=field_data_field_service.entity_id
        WHERE field_market_tid=:tid AND field_service_tid=:ttid AND type='localtarget'", 
        array(':tid' => $node->field_market['und'][0]['tid'], ':ttid' => $node->field_service['und'][0]['tid']))->fetchObject();

      $breadcrumb[] = l('Our Services', 'our-services');
      $breadcrumb[] = l($service->title, 'node/'.$service->nid);
      $breadcrumb[] = l($market->title, 'node/'.$market->nid);
    }

    if ($node->type == 'localtarget') {
      $market = taxonomy_term_load($node->field_market['und'][0]['tid']);
      $breadcrumb[] = $market->name;
    }
    else {
  	  $breadcrumb[] = $node->title;
    }
  }

  return $breadcrumb;
}

/**
 * Implements hook_theme().
 */
function sprowt_theme_theme($existing, $type, $theme, $path) {
    return array(
        'localbusiness_structured_data' => array(
            'variables' => array(
                'name' => null,
                'image' => null
            ),
        ),
        'itemreviewed_structured_data' => array(
            'variables' => array(
                'localbusiness_structured_data' => null
            ),
        ),
    );
}

/**
 * Made this a function to reduce overhead
 *
 * @param $variables
 */
function theme_localbusiness_structured_data($variables) {
    $output = '';
    $output .= "\n<meta itemprop=\"name\" content=\"{$variables['name']}\">\n";
    $output .= "<meta itemprop=\"image\" content=\"{$variables['image']}\">\n";
    
    return $output;
}

/**
 * Made this a function to reduce overhead
 *
 * @param $variables
 */
function theme_itemreviewed_structured_data($variables) {
    $output = '';
    
    $output .= "<span itemprop=\"itemReviewed\" itemscope itemtype=\"http://schema.org/LocalBusiness\">";
    $output .= theme('localbusiness_structured_data', array(
        'name' => $variables['name'],
        'image' => $variables['image']
    ));
    $output .= '</span>';
    
    return $output;
}

function template_preprocess_localbusiness_structured_data(&$variables) {
    $variables['name'] = variable_get('site_name');
    $variables['image'] = theme_get_setting('logo');
}

function template_preprocess_itemreviewed_structured_data(&$variables) {
    $variables['name'] = variable_get('site_name');
    $variables['image'] = theme_get_setting('logo');
}

function _sprowt_theme_location_structured_data($node) {
    $n = entity_metadata_wrapper('node', $node);
    $data = array(
        '@context' => 'http://schema.org',
        '@type' => 'LocalBusiness',
        'name' => variable_get('site_name'),
        'image' => theme_get_setting('logo'),
        'url' => $GLOBALS['base_url'],
        'address' => array(
            '@type' => 'PostalAddress',
            'name' => $node->title,
            'streetAddress' => $n->field_street_address->value(),
            'addressLocality' => $n->field_locality->value(),
            'addressRegion' => $n->field_state->value(),
            'postalCode' => $n->field_postal_code->value()
        ),
    );
    $phone = $n->field_phone_number->value();
    if(!empty($phone)) {
        $data['telephone'] = $phone;
    }
    
    return $data;
}

/**
 * Implements hook_preprocess().
 */
function sprowt_theme_preprocess(&$variables, $hook) {
    $variables['itemreviewed_structured_data'] = theme('itemreviewed_structured_data');
    $variables['localbusiness_structured_data'] = theme('localbusiness_structured_data');
}

function _sprowt_theme_field_exists($field_name, $bundle, $entity_type = 'node') {
    $tmp = field_info_instance($entity_type, $field_name, $bundle);
    return !empty($tmp);
}

function sprowt_theme_form_alter(&$form, &$form_state){

  drupal_add_css(drupal_get_path('module', 'sprowt_theme') . '/css/utility_styles.css');

  //Add privacy policy information above every webform submit button
  if(in_array('webform-client-form',$form["#attributes"]["class"])){
    $form['submit']['#prefix'] = "<div class='webform-privacy-policy'><p>By submitting this form, you are agreeing to the<a href='/privacy-policy'> privacy policy</a></p></div>";
  }

}